<script>
// return data for create / update
function getFormData() {
  const inputEls = document.querySelectorAll('.use-case input[id]');
  const data = Array.from(inputEls).reduce( (acc, el) => {
      acc[el.id] = el.value;
      return acc;
    }, {})
  data['mock_responses'] = Array.from(document.querySelectorAll('.edit-mock-responses .mock-response.row .id'))
      .map(el => el.innerHTML).join(',');

  return data;
}

// add selected mock response into form section
function addMockResponse(data) {
console.log('data...', data);
  const listEl = document.querySelector('.edit-mock-responses');
  const mockResp = data.detail;
  listEl.insertAdjacentHTML('beforeend', `
    <div class="mock-response row">
      <div class="id">${mockResp.id}</div>
      <div class="active">${mockResp.active}</div>
      <div class="name">${mockResp.name}</div>
      <div class="req_method">${mockResp.req_method}</div>
      <div class="req_url">${mockResp.req_url}</div>
      <button onclick="this.parentElement.remove()">x</button>
    </div>`);
}

// search mock responses and set it as hce-list source
function searchMockResponses(keyword) {
  const mockResponsesEl = document.querySelector('#search-mock-responses');
  mockResponsesEl.source = window.fetch(`/mock-responses?q=${keyword||''}`)
    .then(resp => {
      if (!resp.ok) throw Error(resp); 
      return resp.json();
    }).then(resp => {console.log('xxxx', resp); return resp;});
}
</script>
<style>
.mock-responses { display: flex;}
.mock-responses .left { padding: 0 24px; }
.mock-responses .left .desc {  height: 32px; padding: 4px; }
.mock-responses .right { padding: 0 24px; }
.mock-responses .right .search { text-align: right; height: 32px; padding: 4px; }
.mock-responses .row > * {display: inline-block}
.mock-responses .row * { overflow: hidden; white-space: nowrap; text-overflow: ellipsis;}
.mock-responses .row.header > * { background: #CCC; }
.mock-responses .row .id { width: 24px; }
.mock-responses .row .active { width: 48px; }
.mock-responses .row .name {  width: 120px;  }
.mock-responses .row .req_method { width: 80px;}
.mock-responses .row .req_url { width: 120px; }
.mock-responses .row .action { width: 1em; }
.mock-responses .row button { background: none; border: none; cursor: pointer; padding: 0; color: blue; }
</style>
<h3>
  {{#if useCase.id}} Update Use Case {{else}} Create Use Case {{/if}}
</h3>

<div class="use-case form">
  <input type="hidden" id="id" value="{{useCase.id}}">

  {{#if useCase.id}}
  <div class="id">
    <label for="id">Id</label>
    <input id="id" readonly value="{{useCase.id}}" />
  </div>
  {{/if}}

  <div class="name">
    <label for="name">Name</label>
    <input id="name" value="{{useCase.name}}" />
  </div>

  <div class="description">
    <label for="description">Description</label>
    <input id="description" value="{{useCase.description}}" />
  </div>

  <h3>Mock Responses</h3>
  <div class="mock-responses">
    <div class="left">
      <div class="desc"> Search and add mock responses from the left</div>
      <div class="header row">
        <div class="id">id</div>
        <div class="active">active</div>
        <div class="name">name</div>
        <div class="req_method">method</div>
        <div class="req_url">url</div>
        <div class="action"> &nbsp; </div>
      </div>
      <div class="edit-mock-responses">
      {{#each mockResponses}}
        <div class="mock-response row">
          <div class="id">{{this.id}}</div>
          <div class="active">{{this.active}}</div>
          <div class="name">{{this.name}}</div>
          <div class="req_method">{{this.req_method}}</div>
          <div class="req_url">{{this.req_url}}</div>
          <button onclick="this.parentElement.remove()">X</button>
        </div>
      {{/each}}
      </div>
    </div>
    <div class="right">
      <div class="search">
        <input placeholder="Type to search mock-responses" onchange="searchMockResponses(this.value)" />
      </div>
      <div class="header row">
        <div class="id">id</div>
        <div class="active">active</div>
        <div class="name">name</div>
        <div class="req_method">method</div>
        <div class="req_url">url</div>
      </div>
      <hce-list id="search-mock-responses" class="list" (selected)="addMockResponse(event)">
        <div class="mock-response row">
          <div class="id">[[id]]</div>
          <div class="active">[[active]]</div>
          <div class="name">[[name]]</div>
          <div class="req_method">[[req_method]]</div>
          <div class="req_url">[[req_url]]</div>
        </div>
      </hce-list>
    </div>
  </div>

  {{#if useCase.id}}
    <button onclick="fireEvent(event, 'update-use-case', getFormData())">
      Update Use Case
    </button>
    <button onclick="fireEvent(event, 'delete-use-case', {{useCase.id}})">
      Delete Use Case
    </button>
  {{else}}
    <button onclick="fireEvent(event, 'create-use-case', getFormData())">
      Create Use Case
    </button>
  {{/if}}
</div>

